#include <WiFiNINA.h>
#include <HTTPClient.h>
/*

*/

void setup() {
  
  int status = WL_IDLE_STATUS;             // the Wi-Fi radio's status
  char ssid[] = "SAMK-IoT";                // your network SSID (name)
  char pass[] = "I0T#5amk";                 // your 
  
  //Initialize serial and wait for port to open:
  Serial.begin(9600);
  while (!Serial);
 
  // set the LED as output
  pinMode(LED_BUILTIN, OUTPUT);
  
  // attempt to connect to Wi-Fi network:
  while (status != WL_CONNECTED) {
    Serial.print("Attempting to connect to network: ");
    Serial.println(ssid);
    // Connect to WPA/WPA2 network:
    status = WiFi.begin(ssid);
   
    // wait 5 seconds for connection:
    delay(5000);
}

  // you're connected now, so print out the data:
  if (status == WL_CONNECTED) {
    Serial.println("You're connected to the network");
    Serial.println("---------------------------------------");
  }
  printWiFiStatus();
}

void loop() {
}

void printWiFiStatus () {
    unsigned long previousMillisInfo = 0;     //will store last time Wi-Fi information was updated
  unsigned long previousMillisLED = 0;      // will store the last time LED was updated
  unsigned long currentMillisInfo = millis();
  const int intervalInfo = 5000;            // interval at which to update the board information

  // check if the time after the last update is bigger the interval
  if (currentMillisInfo - previousMillisInfo >= intervalInfo) {
    previousMillisInfo = currentMillisInfo;
 
    Serial.println("Board Information:");
    // print your board's IP address:
    IPAddress ip = WiFi.localIP();
    Serial.print("IP Address: ");
    Serial.println(ip);
 
    // print your network's SSID:
    Serial.println();
    Serial.println("Network Information:");
    Serial.print("SSID: ");
    Serial.println(WiFi.SSID());
 
    // print the received signal strength:
    long rssi = WiFi.RSSI();
    Serial.print("signal strength (RSSI):");
    Serial.println(rssi);
    Serial.println("---------------------------------------");
  }
}

void serverconnect() {
  //aja tätä loopissa, delay n. 10 sekuntia
}

//please enter your sensitive data in the Secret tab


// char pass[] = SECRET_PASS;                // your network password (use for WPA, or use as key for WEP)


// int ledState = LOW;                       //ledState used to set the LED
